/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package simulazione;

import java.awt.Color;
import java.awt.Font;
import java.util.Vector;
import javax.swing.SwingConstants;

/**
 *
 * @author carlo
 */
public class FrameSimulazione extends javax.swing.JFrame {

    /**
     * Creates new form FrameSimulazione
     */
    Simulazione sim;
    Vector<PanelCassa> casse;
    boolean inSimulazione = false;

    public FrameSimulazione(Simulazione sim) {
        initComponents();

        jLabelOperatore.setBackground(Color.white);
        jLabelFaiDaTe.setBackground(Color.white);
        jLabelOperatore.setOpaque(true);
        jLabelFaiDaTe.setOpaque(true);
        jLabelOperatore.setFont(new Font(Font.SANS_SERIF, Font.ITALIC, 16));
        jLabelFaiDaTe.setFont(new Font(Font.SANS_SERIF, Font.ITALIC, 16));
        jLabelOperatore.setHorizontalAlignment(SwingConstants.CENTER);
        jLabelFaiDaTe.setHorizontalAlignment(SwingConstants.CENTER);
        
        setTitle("Simulazione");
        this.sim = sim;
        sim.setFrameSimulazione(this);
        casse = new Vector<>();
        PanelCassa tr;
        for (int i = 0; i < sim.casse.size(); i++) {
            tr = new PanelCassa(sim.casse.elementAt(i));
            casse.insertElementAt(tr, i);
            jPanel1.add(tr);
        }
        /*
         PanelCassa cassa1=new PanelCassa();
         PanelCassa cassa2=new PanelCassa();
         PanelCassa cassa3=new PanelCassa();
         PanelCassa cassa4=new PanelCassa();
         PanelCassa cassa5=new PanelCassa();
         PanelCassa cassa6=new PanelCassa();
        
         jPanel1.add(cassa1);
         jPanel1.add(cassa2);
         jPanel1.add(cassa3);
         jPanel1.add(cassa4);
         jPanel1.add(cassa5);
         jPanel1.add(cassa6);
         */
        jScrollPane1.setViewportView(jPanel1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabelOperatore = new javax.swing.JLabel();
        jLabelFaiDaTe = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane1.setViewportView(jPanel1);

        jButton1.setText("play");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("pause");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(10);
        jSlider1.setMaximum(50);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setText("Velocit√† simulazione");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabelOperatore.setText("Rho Operatore");

        jLabelFaiDaTe.setText("Rho Fai da te");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelFaiDaTe, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabelOperatore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton1)
                                    .addComponent(jLabel1))
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabelOperatore, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelFaiDaTe, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (!inSimulazione) {
            System.out.println("inizio simulazione");
            printArea("inizio simulazione");
            sim.setTempoAttesa(jSlider1.getValue());
            sim.start();
        }
        jButton1.setEnabled(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        sim.setInPause();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        sim.setTempoAttesa(jSlider1.getValue());
    }//GEN-LAST:event_jSlider1StateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelFaiDaTe;
    private javax.swing.JLabel jLabelOperatore;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    public void aggiorna() {
        for (int i = 0; i < casse.size(); i++) {
            casse.elementAt(i).aggiornaPanel();
        }
    }

    public void printArea(String str) {
        jTextArea1.append(str + "\n");
        jTextArea1.setCaretPosition(jTextArea1.getDocument().getLength());
    }

    public void setLabelStabile(double mediaRhoOperatore, double mediaRhoFaiDaTe) {
        if (mediaRhoOperatore <= 1.0) {
            jLabelOperatore.setText("Rho Operatore - stabile");
            jLabelOperatore.setBackground(Color.green);
        } else {
            jLabelOperatore.setText("Rho Operatore - instabile");
            jLabelOperatore.setBackground(Color.red);
        }

        if (mediaRhoFaiDaTe <= 1.0) {
            jLabelFaiDaTe.setText("Rho Fai da te - stabile");
            jLabelFaiDaTe.setBackground(Color.green);
        } else {
            jLabelFaiDaTe.setText("Rho Fai da te - instabile");
            jLabelFaiDaTe.setBackground(Color.red);
        }

    }
}
